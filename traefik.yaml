version: "3.8"

services:
  traefik:
    image: traefik:v2.11
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.le.acme.dnschallenge.resolvers=1.1.1.1:53
      - --certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.le.acme.keyType=EC384
      - --certificatesresolvers.le.acme.dnschallenge.delayBeforeCheck=10
      - --log.level=DEBUG
      - --accesslog
      - --log
      - --api
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_DNS_API_TOKEN=${CLOUDFLARE_API_TOKEN}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - cert-data:/certificates
    networks:
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.middlewares.admin-auth.basicauth.users=admin:${HASHED_PASSWORD}
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.traefik-public-http.rule=Host(`opssync.pro`)
      - traefik.http.routers.traefik-public-http.entrypoints=http
      - traefik.http.routers.traefik-public-http.middlewares=https-redirect
      - traefik.http.routers.traefik-public-http.service=api@internal
      - traefik.http.routers.traefik-public-https.rule=Host(`opssync.pro`)
      - traefik.http.routers.traefik-public-https.entrypoints=https
      - traefik.http.routers.traefik-public-https.middlewares=admin-auth
      - traefik.http.routers.traefik-public-https.service=api@internal
      - traefik.http.routers.traefik-public-https.tls=true
      - traefik.http.routers.traefik-public-https.tls.certresolver=le

  redirect-www-aqua:
    image: traefik/whoami  # or nginx:alpine if you prefer
    container_name: redirect-www-aqua
    networks:
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.redirect-www-aqua.rule=Host(`www.aquaworldservicing.opssync.pro`)
      - traefik.http.routers.redirect-www-aqua.entrypoints=https
      - traefik.http.routers.redirect-www-aqua.tls=true
      - traefik.http.routers.redirect-www-aqua.tls.certresolver=le

      # ✅ The actual redirect
      - traefik.http.routers.redirect-www-aqua.middlewares=redirect-to-root
      - traefik.http.middlewares.redirect-to-root.redirectregex.regex=^https://www\\.(.*)
      - traefik.http.middlewares.redirect-to-root.redirectregex.replacement=https://$1
      - traefik.http.middlewares.redirect-to-root.redirectregex.permanent=true

      # ✅ Needed so Traefik doesn't try to contact your dummy container
      - traefik.http.routers.redirect-www-aqua.service=noop@internal



  redirect-www-bluecode:
    image: traefik/whoami
    container_name: redirect-www-bluecode
    networks:
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.redirect-www-bluecode.rule=Host(`www.bluecode-solutions.opssync.pro`)
      - traefik.http.routers.redirect-www-bluecode.entrypoints=https
      - traefik.http.routers.redirect-www-bluecode.tls=true
      - traefik.http.routers.redirect-www-bluecode.tls.certresolver=le
      - traefik.http.routers.redirect-www-bluecode.middlewares=redirect-to-root
      - traefik.http.middlewares.redirect-to-root.redirectregex.regex=^https://www\\.(.*)
      - traefik.http.middlewares.redirect-to-root.redirectregex.replacement=https://$1
      - traefik.http.middlewares.redirect-to-root.redirectregex.permanent=true
      - traefik.http.routers.redirect-www-bluecode.service=noop@internal

  redirect-www-innovacortex:
    image: traefik/whoami
    container_name: redirect-www-innovacortex
    networks:
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.redirect-www-innovacortex.rule=Host(`www.innovacortex.opssync.pro`)
      - traefik.http.routers.redirect-www-innovacortex.entrypoints=https
      - traefik.http.routers.redirect-www-innovacortex.tls=true
      - traefik.http.routers.redirect-www-innovacortex.tls.certresolver=le
      - traefik.http.routers.redirect-www-innovacortex.middlewares=redirect-to-root
      - traefik.http.middlewares.redirect-to-root.redirectregex.regex=^https://www\\.(.*)
      - traefik.http.middlewares.redirect-to-root.redirectregex.replacement=https://$1
      - traefik.http.middlewares.redirect-to-root.redirectregex.permanent=true
      - traefik.http.routers.redirect-www-innovacortex.service=noop@internal

networks:
  traefik-public:
    external: true

volumes:
  cert-data:
    name: traefik_cert-data
