name: traefik
services:
  traefik:
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      # - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.le.acme.dnschallenge.resolvers=1.1.1.1:53
      - --certificatesresolvers.le.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.le.acme.keyType=EC384
      - --certificatesresolvers.le.acme.dnschallenge.delayBeforeCheck=10  # Optiona
      - --accesslog
      - --log
      - --api
    image: traefik:v2.11
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_DNS_API_TOKEN=${CLOUDFLARE_API_TOKEN}
    labels:
      traefik.docker.network: traefik-public
      traefik.enable: "true"
      traefik.http.middlewares.admin-auth.basicauth.users: admin:$$apr1$$OTP6B3g9$$KGdFXMeroX9Nw8.skPpz/0
      traefik.http.middlewares.https-redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
      traefik.http.routers.traefik-public-http.entrypoints: http
      traefik.http.routers.traefik-public-http.middlewares: https-redirect
      traefik.http.routers.traefik-public-http.rule: Host(`opssync.pro`, `*.opssync.pro`)
      traefik.http.routers.traefik-public-http.service: api@internal
      traefik.http.routers.traefik-public-https.entrypoints: https
      traefik.http.routers.traefik-public-https.middlewares: admin-auth
      traefik.http.routers.traefik-public-https.rule: Host(`opssync.pro`, `*.opssync.pro`)
      traefik.http.routers.traefik-public-https.service: api@internal
      traefik.http.routers.traefik-public-https.tls: "true"
      traefik.http.routers.traefik-public-https.tls.certresolver: le
      traefik.http.services.traefik-public.loadbalancer.server.port: "8080"
    networks:
      traefik-public: null
    ports:
      - mode: ingress
        target: 80
        published: "80"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "443"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: cert-data
        target: /certificates
        volume: {}
networks:
  traefik-public:
    name: traefik-public
volumes:
  cert-data:
    name: traefik_cert-data
